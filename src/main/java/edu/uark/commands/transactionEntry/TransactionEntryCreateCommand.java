package edu.uark.commands.transactionEntry;

import org.apache.commons.lang3.StringUtils;

import edu.uark.commands.ResultCommandInterface;
import edu.uark.controllers.exceptions.UnprocessableEntityException;
import edu.uark.models.api.TransactionEntry;
import edu.uark.models.entities.TransactionEntryEntity;
import edu.uark.models.repositories.TransactionEntryRepository;
import edu.uark.models.repositories.interfaces.TransactionEntryRepositoryInterface;

public class TransactionEntryCreateCommand implements ResultCommandInterface<TransactionEntry> {
    @Override
    public TransactionEntry execute() {

        //Validations
        if(this.apiTransactionEntryEntity.getPrice() == 0.00) {
            throw new UnprocessableEntityException("price");
        }

        if(StringUtils.isBlank(this.apiTransactionEntryEntity.getLookupCode())) {
            throw new UnprocessableEntityException("lookup code");
        }



        TransactionEntryEntity transactionEntryEntity = new TransactionEntryEntity(this.apiTransactionEntryEntity);
        transactionEntryEntity.save();

        //Synchronize information generated by database
        this.apiTransactionEntryEntity.setId(transactionEntryEntity.getId());
        this.apiTransactionEntryEntity.setCreatedOn(transactionEntryEntity.getCreatedOn());
        return this.apiTransactionEntryEntity;
    }

    //Properties
    private TransactionEntry apiTransactionEntryEntity;
    public TransactionEntry getApiTransactionEntry() {
        return this.apiTransactionEntryEntity;
    }

    public TransactionEntryCreateCommand setApiTransactionEntry(TransactionEntry apiTransactionEntryEntity) {
        this.apiTransactionEntryEntity = apiTransactionEntryEntity;
        return this;
    }

    private TransactionEntryRepositoryInterface transactionEntryRepository;
    public TransactionEntryRepositoryInterface getTransactionEntryRepository() {
        return transactionEntryRepository;
    }

    public TransactionEntryCreateCommand setTransactionEntryRepository(TransactionEntryRepositoryInterface transactionEntryRepository) {
        this.transactionEntryRepository = transactionEntryRepository;
        return this;
    }

    public TransactionEntryCreateCommand() {
        this.transactionEntryRepository = new TransactionEntryRepository();
    }

}
